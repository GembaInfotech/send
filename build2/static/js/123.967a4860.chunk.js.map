{"version":3,"file":"static/js/123.967a4860.chunk.js","mappings":"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","sources":["components/profile/TrustedDevicesLocations.jsx","components/profile/PrimaryDevicesLocations.jsx","components/profile/BlockedDevicesLocations.jsx","pages/DevicesLocations.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getTrustedContextAuthDataAction,\r\n  deleteContextAuthDataAction,\r\n  getBlockedAuthContextDataAction,\r\n  blockContextAuthDataAction,\r\n} from \"../../redux/actions/authActions\";\r\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\r\n\r\nconst TrustedDevicesLocations = ({ trustedAuthContextData }) => {\r\n  const [deleteLoading, setDeleteLoading] = useState({});\r\n  const [blockLoading, setBlockLoading] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = async (contextId) => {\r\n    setDeleteLoading((prevState) => ({\r\n      ...prevState,\r\n      [contextId]: true,\r\n    }));\r\n\r\n    await dispatch(deleteContextAuthDataAction(contextId));\r\n    await dispatch(getTrustedContextAuthDataAction());\r\n\r\n    setDeleteLoading((prevState) => ({\r\n      ...prevState,\r\n      [contextId]: false,\r\n    }));\r\n  };\r\n\r\n  const handleBlock = async (contextId) => {\r\n    setBlockLoading((prevState) => ({\r\n      ...prevState,\r\n      [contextId]: true,\r\n    }));\r\n\r\n    await dispatch(blockContextAuthDataAction(contextId));\r\n    await dispatch(getTrustedContextAuthDataAction());\r\n    await dispatch(getBlockedAuthContextDataAction());\r\n\r\n    setBlockLoading((prevState) => ({\r\n      ...prevState,\r\n      [contextId]: false,\r\n    }));\r\n  };\r\n\r\n  const trustedDevices = trustedAuthContextData?.map((device) => ({\r\n    _id: device._id,\r\n    device: device.device,\r\n    deviceType: device.deviceType,\r\n    ipAddress: device.ip,\r\n    location: `${device.city}, ${device.country}`,\r\n    browser: device.browser,\r\n    operatingSystem: device.os,\r\n    time: device.time,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\r\n      <h2 className=\"text-lg font-medium text-gray-900\">\r\n        Trusted Devices and Locations\r\n      </h2>\r\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\r\n        <div className=\"flow-root\">\r\n          <ul className=\"-my-5 divide-y divide-gray-200\">\r\n            {trustedDevices.length === 0 && (\r\n              <span className=\"text-sm font-medium text-gray-900\">\r\n                Not available\r\n              </span>\r\n            )}\r\n\r\n            {trustedDevices.map((device) => (\r\n              <li key={device._id} className=\"py-5\">\r\n                <div className=\"flex items-center justify-between space-x-4\">\r\n                  <div className=\"min-w-0 flex-1\">\r\n                    <div>\r\n                      <span className=\"text-sm font-medium text-gray-900\">\r\n                        {device.device} {device.deviceType} - {device.time}\r\n                      </span>\r\n\r\n                      <span className=\"ml-1 text-sm text-gray-500\">\r\n                        ({device.ipAddress})\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"mt-1 flex items-center space-x-4\">\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {device.location}\r\n                      </span>\r\n                      <span className=\"text-sm text-gray-500\">â€¢</span>\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {device.browser} on {device.operatingSystem}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-shrink-0\">\r\n                    <button\r\n                      disabled={deleteLoading[device._id]}\r\n                      onClick={() => handleDelete(device._id)}\r\n                      type=\"button\"\r\n                      className=\"mx-3 inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n                    >\r\n                      {deleteLoading[device._id] ? (\r\n                        <LoadingSpinner loadingText={\"Removing...\"} />\r\n                      ) : (\r\n                        <span>Remove</span>\r\n                      )}\r\n                    </button>\r\n                    <button\r\n                      disabled={blockLoading[device._id]}\r\n                      onClick={() => handleBlock(device._id)}\r\n                      type=\"button\"\r\n                      className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-gray-400 hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300\"\r\n                    >\r\n                      {blockLoading[device._id] ? (\r\n                        <LoadingSpinner loadingText={\"Blocking...\"} />\r\n                      ) : (\r\n                        <span>Block</span>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrustedDevicesLocations;\r\n","const PrimaryDevicesLocations = ({ contextAuthData }) => {\r\n  const primaryDevice = {\r\n    \"First Added\": contextAuthData?.firstAdded,\r\n    \"IP Address\": contextAuthData?.ip,\r\n    Country: contextAuthData?.country,\r\n    City: contextAuthData?.city,\r\n    Browser: contextAuthData?.browser,\r\n    Platform: contextAuthData?.platform,\r\n    OS: contextAuthData?.os,\r\n    Device: contextAuthData?.device,\r\n    \"Device Type\": contextAuthData?.deviceType,\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n      <div className=\"max-w-3xl mx-auto\">\r\n        <h2 className=\"text-lg font-medium text-gray-900\">\r\n          Primary Devices and Locations\r\n        </h2>\r\n\r\n        <div className=\"mt-6 border-t border-gray-200 pt-6\">\r\n          <dl className=\"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2\">\r\n            {Object.entries(primaryDevice).map(([key, value]) => (\r\n              <div key={key} className=\"sm:col-span-1\">\r\n                <dt className=\"text-sm font-medium text-gray-500\">{key}</dt>\r\n                <dd className=\"mt-1 text-sm text-gray-900\">{value}</dd>\r\n              </div>\r\n            ))}\r\n          </dl>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrimaryDevicesLocations;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getTrustedContextAuthDataAction,\r\n  getBlockedAuthContextDataAction,\r\n  unblockContextAuthDataAction,\r\n} from \"../../redux/actions/authActions\";\r\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\r\n\r\nconst BlockedDevicesLocations = ({ blockedContextAuthData }) => {\r\n  const [loading, setLoading] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleUnblock = async (contextId) => {\r\n    setLoading((prevState) => ({\r\n      ...prevState,\r\n      [contextId]: true,\r\n    }));\r\n\r\n    await dispatch(unblockContextAuthDataAction(contextId));\r\n    await dispatch(getBlockedAuthContextDataAction());\r\n    await dispatch(getTrustedContextAuthDataAction());\r\n\r\n    setLoading((prevState) => ({\r\n      ...prevState,\r\n      [contextId]: false,\r\n    }));\r\n  };\r\n\r\n  const blockedDevices = blockedContextAuthData?.map((device) => ({\r\n    _id: device._id,\r\n    device: device.device,\r\n    deviceType: device.deviceType,\r\n    ipAddress: device.ip,\r\n    location: `${device.city}, ${device.country}`,\r\n    browser: device.browser,\r\n    operatingSystem: device.os,\r\n    time: device.time,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\r\n      <h2 className=\"text-lg font-medium text-gray-900\">\r\n        Blocked Devices and Locations\r\n      </h2>\r\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\r\n        <div className=\"flow-root\">\r\n          <ul className=\"-my-5 divide-y divide-gray-200\">\r\n            {blockedDevices.length === 0 && (\r\n              <span className=\"text-sm font-medium text-gray-900\">\r\n                Not available\r\n              </span>\r\n            )}\r\n            {blockedDevices.map((device) => (\r\n              <li key={device._id} className=\"py-5\">\r\n                <div className=\"flex items-center justify-between space-x-4\">\r\n                  <div className=\"min-w-0 flex-1\">\r\n                    <div>\r\n                      <span className=\"text-sm font-medium text-gray-900\">\r\n                        {device.device} {device.deviceType} - {device.time}\r\n                      </span>\r\n\r\n                      <span className=\"ml-1 text-sm text-gray-500\">\r\n                        ({device.ipAddress})\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"mt-1 flex items-center space-x-4\">\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {device.location}\r\n                      </span>\r\n                      <span className=\"text-sm text-gray-500\">â€¢</span>\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {device.browser} on {device.operatingSystem}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-shrink-0\">\r\n                    <button\r\n                      disabled={loading[device._id]}\r\n                      onClick={() => handleUnblock(device._id)}\r\n                      type=\"button\"\r\n                      className={`inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white ${\r\n                        loading[device._id]\r\n                          ? \"bg-gray-400 cursor-not-allowed\"\r\n                          : \"bg-blue-500 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\"\r\n                      }`}\r\n                    >\r\n                      {loading[device._id] ? (\r\n                        <LoadingSpinner loadingText={\"unblocking...\"} />\r\n                      ) : (\r\n                        \"Unblock\"\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockedDevicesLocations;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport TrustedDevicesLocations from \"../components/profile/TrustedDevicesLocations\";\r\nimport PrimaryDevicesLocations from \"../components/profile/PrimaryDevicesLocations\";\r\nimport BlockedDevicesLocations from \"../components/profile/BlockedDevicesLocations\";\r\nimport CommonLoading from \"../components/loader/CommonLoading\";\r\n\r\nimport {\r\n  getTrustedContextAuthDataAction,\r\n  getUserPreferencesAction,\r\n  getBlockedAuthContextDataAction,\r\n  getContextAuthDataAction,\r\n} from \"../redux/actions/authActions\";\r\n\r\nconst DevicesLocations = () => {\r\n  const dispatch = useDispatch();\r\n  const [dateFetched, setDateFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await dispatch(getUserPreferencesAction());\r\n      await dispatch(getContextAuthDataAction());\r\n      await dispatch(getTrustedContextAuthDataAction());\r\n      await dispatch(getBlockedAuthContextDataAction());\r\n    };\r\n    fetchData().then(() => setDateFetched(true));\r\n  }, [dispatch, dateFetched]);\r\n\r\n  const userPreferences = useSelector((state) => state.auth?.userPreferences);\r\n  const contextAuthData = useSelector((state) => state.auth?.contextAuthData);\r\n  const trustedAuthContextData = useSelector(\r\n    (state) => state.auth?.trustedAuthContextData\r\n  );\r\n  const blockedContextAuthData = useSelector(\r\n    (state) => state.auth?.blockedAuthContextData\r\n  );\r\n\r\n  if (!dateFetched) {\r\n    return (\r\n      <div className=\"col-span-2 flex items-center justify-center h-screen\">\r\n        <CommonLoading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!userPreferences || !contextAuthData) {\r\n    return (\r\n      <div className=\"bg-white border p-5 text-gray-700 text-center main-section\">\r\n        <p className=\"text-lg font-semibold mb-4\">\r\n          Context-based authentication is currently disabled for your account.\r\n        </p>\r\n        <p className=\"text-sm\">\r\n          By enabling context-based authentication, you will gain control over\r\n          your devices, their locations, and manage trusted and blocked devices.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-section border bg-white\">\r\n      <PrimaryDevicesLocations contextAuthData={contextAuthData} />\r\n\r\n      <TrustedDevicesLocations\r\n        trustedAuthContextData={trustedAuthContextData}\r\n      />\r\n      <BlockedDevicesLocations\r\n        blockedContextAuthData={blockedContextAuthData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevicesLocations;\r\n"],"names":["_ref","trustedAuthContextData","deleteLoading","setDeleteLoading","useState","blockLoading","setBlockLoading","dispatch","useDispatch","trustedDevices","map","device","_id","deviceType","ipAddress","ip","location","concat","city","country","browser","operatingSystem","os","time","_jsxs","className","children","_jsx","length","disabled","onClick","async","prevState","contextId","deleteContextAuthDataAction","getTrustedContextAuthDataAction","handleDelete","type","LoadingSpinner","loadingText","blockContextAuthDataAction","getBlockedAuthContextDataAction","handleBlock","contextAuthData","primaryDevice","firstAdded","Country","City","Browser","Platform","platform","OS","Device","Object","entries","_ref2","key","value","blockedContextAuthData","loading","setLoading","blockedDevices","unblockContextAuthDataAction","handleUnblock","DevicesLocations","dateFetched","setDateFetched","useEffect","getUserPreferencesAction","getContextAuthDataAction","fetchData","then","userPreferences","useSelector","state","_state$auth","auth","_state$auth2","_state$auth3","_state$auth4","blockedAuthContextData","PrimaryDevicesLocations","TrustedDevicesLocations","BlockedDevicesLocations","CommonLoading"],"sourceRoot":""}