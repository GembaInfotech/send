{"version":3,"file":"static/js/65.6faa64f4.chunk.js","mappings":"uNASA,MAqFA,EArFYA,IAAoC,IAAnC,UAAEC,EAAS,eAAEC,GAAgBF,EACxC,MAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAU7C,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAAuEC,UACpFC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,sEAAqEC,SAAA,EACjFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCC,EAAAA,EAAAA,MAAA,QACEF,UAAS,6EAAAG,OACO,SAAdb,EACI,mDACA,gEAENc,QAASA,IAAMb,EAAe,QAAQU,SAAA,EAEtCF,EAAAA,EAAAA,KAACM,EAAAA,IAAa,CAACL,UAAU,SAAS,aAItCD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCC,EAAAA,EAAAA,MAAA,QACEF,UAAS,6EAAAG,OACO,aAAdb,EACI,mDACA,gEAENc,QAASA,IAAMb,EAAe,YAAYU,SAAA,EAE1CF,EAAAA,EAAAA,KAACO,EAAAA,IAAiB,CAACN,UAAU,SAAS,iBAI1CD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCC,EAAAA,EAAAA,MAAA,QACEF,UAAS,6EAAAG,OACO,yBAAdb,EACI,mDACA,gEAENc,QAASA,IAAMb,EAAe,wBAAwBU,SAAA,EAEtDF,EAAAA,EAAAA,KAACQ,EAAAA,IAAQ,CAACP,UAAU,SAAS,6BAIjCD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCC,EAAAA,EAAAA,MAAA,QACEF,UAAS,6EAAAG,OACO,WAAdb,EACI,mDACA,8DAENc,QAzDWI,UACnBX,GAAc,SACRH,GAASe,EAAAA,EAAAA,OAAgBC,MAAK,KAClClB,EAAS,gBAAgB,IAE3BK,GAAc,EAAM,EAoDUI,SAAA,EAEtBF,EAAAA,EAAAA,KAACY,EAAAA,IAAQ,CAACX,UAAU,UACpBD,EAAAA,EAAAA,KAAA,QACEC,UAAS,GAAAG,OACO,WAAdb,EACI,4BACA,4BACHW,SAEFL,GACCG,EAAAA,EAAAA,KAACa,EAAAA,EAAoB,CAACC,YAAa,mBAEnC,oBAMN,EC3DV,EA7BoBC,KAClB,MAAOC,EAAMC,IAAWlB,EAAAA,EAAAA,WAAS,IAAImB,MAAOC,mBAE5CC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BL,GAAQ,IAAIC,MAAOC,iBAAiB,GACnC,KAEH,MAAO,IAAMI,cAAcF,EAAS,GACnC,IAEH,MAAMG,EAAO,IAAIN,KAAKF,GAChBS,EAAUD,EAAKE,mBAAmB,QAAS,CAAED,QAAS,SACtDE,EAAQH,EAAKE,mBAAmB,QAAS,CAAEC,MAAO,SAClDC,EAAMJ,EAAKE,mBAAmB,QAAS,CAAEE,IAAK,YAC9CC,EAAOL,EAAKE,mBAAmB,QAAS,CAAEG,KAAM,YAChDC,EAAQN,EAAKO,WAAa,IAAM,GAChCC,EAAUR,EAAKS,aAAaC,WAAWC,SAAS,EAAG,KACnDC,EAAUZ,EAAKa,aAAaH,WAAWC,SAAS,EAAG,KACnDG,EAAOd,EAAKO,YAAc,GAAK,KAAO,KACtCQ,EAAU,GAAAnC,OAAM0B,EAAK,KAAA1B,OAAI4B,EAAO,KAAA5B,OAAIgC,EAAO,KAAAhC,OAAIkC,GAErD,OACEtC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAA,GAAAE,OACrCqB,EAAO,MAAArB,OAAKuB,EAAK,KAAAvB,OAAIwB,EAAG,MAAAxB,OAAKyB,EAAI,KAAAzB,OAAImC,IACrC,E,wBChBV,MAgKA,EAhKaC,KACX,MAAOC,EAASC,IAAc3C,EAAAA,EAAAA,WAAS,IAChC4C,EAAUC,IAAe7C,EAAAA,EAAAA,WAAS,GAEnCJ,GAAWC,EAAAA,EAAAA,MACXiD,GAAOC,EAAAA,EAAAA,KAAaC,IAAK,IAAAC,EAAA,OAAgB,QAAhBA,EAAKD,EAAME,aAAK,IAAAD,OAAA,EAAXA,EAAaH,IAAI,IAE/CK,EAAYzC,UAChB,IACEiC,GAAW,SACL/C,GAASwD,EAAAA,EAAAA,MACjB,CAAC,QACCT,GAAW,EACb,GAwBF,OALAtB,EAAAA,EAAAA,YAAU,KACR8B,GAAW,GAEV,CAAK,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMO,SAENX,IAAYI,GAEZ7C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDF,EAAAA,EAAAA,KAACqD,EAAAA,EAAa,OAMlBrD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qEAAoEC,UACjFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sFAAqFC,SAAA,EAClGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCC,SAAC,wBAGjDF,EAAAA,EAAAA,KAACe,EAAW,QAGdZ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uEAAsEC,SAAA,EACnFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,SAAA,WAAAE,OAAayC,EAAKO,OAAM,kCAErEjD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,UAAQK,QAlCII,UACpB,IACEiC,GAAW,SACLQ,GACR,CAAE,MAAOI,GAAQ,GA8BsBpD,UAC7BF,EAAAA,EAAAA,KAACuD,EAAAA,IAAS,OAEZvD,EAAAA,EAAAA,KAAA,UACEC,UAAS,sEAAAG,OACPuC,EAAW,gCAAkC,GAAE,KAAAvC,OAC7B,IAAhByC,EAAKO,OAAe,SAAW,IACnC/C,QAlDUI,UACpB,IACEmC,GAAY,SACNjD,GAAS6D,EAAAA,EAAAA,MACjB,CAAC,QACCZ,GAAY,EACd,GA6CUa,SAAUd,GAA4B,IAAhBE,EAAKO,OAAalD,SAEvCyC,GACC3C,EAAAA,EAAAA,KAACa,EAAAA,EAAoB,CAACC,YAAY,gBAElC,qBAMN2B,EA4EE,KA3Ec,IAAhBI,EAAKO,QACHpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SAAC,mBAEvCC,EAAAA,EAAAA,MAAAuD,EAAAA,SAAA,CAAAxD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC/CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gFAA+EC,SAAA,EAC5FF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAC,eAC3BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,aACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gBACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oBAEJ2C,EAAKc,KAAKC,IACTzD,EAAAA,EAAAA,MAAA,OAEEF,UAAU,0EAAyEC,SAAA,EAEnFC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,6DAA4DC,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,KAAAE,SAAI0D,EAAIC,qBACR7D,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASC,SAAE0D,EAAIE,yBAE9B3D,EAAAA,EAAAA,MAAA,MACEF,UAAS,GAAAG,OACO,SAAdwD,EAAIG,MACA,gBACc,SAAdH,EAAIG,MACJ,kBACc,UAAdH,EAAIG,MACJ,eACA,IACH7D,SAAA,EAEHC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,aAAYC,SAAA,CAAE0D,EAAII,KAAK,SACvChE,EAAAA,EAAAA,KAAA,QAAAE,SAAO0D,EAAIK,cAEbjE,EAAAA,EAAAA,KAAA,KAAAE,SAAI0D,EAAIM,SACRlE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,GAAEC,UACdF,EAAAA,EAAAA,KAAA,QACEC,UAAS,gDAAAG,OACO,UAAdwD,EAAIG,MACA,wBACc,SAAdH,EAAIG,MACJ,2BACA,0BACH7D,SAEF0D,EAAIG,WAGT/D,EAAAA,EAAAA,KAAA,MAAIC,UAAU,GAAEC,UACdF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAClC0D,EAAIO,aACHC,OAAOC,QAAQT,EAAIO,aAAaR,KAC9BrE,IAAA,IAAEgF,EAAKC,GAAMjF,EAAA,OACXa,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4BAA2BC,SAAA,CACxCoE,EAAI,IAAE,OAERC,IAJMD,EAKJ,UA7CVV,EAAIY,aAuDjBxE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wDAAuDC,SAAC,uDAO3E,EC9BV,EAlIiBuE,KACf,MAAM9E,GAAWC,EAAAA,EAAAA,OACV8E,EAAWC,IAAgB5E,EAAAA,EAAAA,WAAS,IACpC6E,EAAYC,IAAiB9E,EAAAA,EAAAA,WAAS,IACtC+E,EAAWC,IAAgBhF,EAAAA,EAAAA,WAAS,GACrCiF,GAAqBlC,EAAAA,EAAAA,KACxBC,IAAK,IAAAC,EAAA,OAAgB,QAAhBA,EAAKD,EAAME,aAAK,IAAAD,OAAA,EAAXA,EAAagC,kBAAkB,KAErCC,EAAmBC,IAAwBnF,EAAAA,EAAAA,WAAS,IAEzDoF,EACAC,IACErF,EAAAA,EAAAA,UAAS,KACNsF,EAAiCC,IACtCvF,EAAAA,EAAAA,UAAS,IAEXqB,EAAAA,EAAAA,YAAU,KACRzB,GAAS4F,EAAAA,EAAAA,MAA8B,GACtC,CAAC5F,KAEJyB,EAAAA,EAAAA,YAAU,KACJ4D,IACFE,EAAqBF,EAAmBC,mBACxCG,EACEJ,EAAmBG,kCAErBG,EACEN,EAAmBK,iCAErBV,GAAa,GACf,GACC,CAACK,IAsBJ,OAAIN,IAAcM,GACThF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,gBAIZC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6DAA4DC,SAAC,wBAI1E4E,IACC9E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,SAAC,+CAKhEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,gDACLF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAAA,SACEC,UAAU,sLACV+D,KAAK,WACLwB,QAASP,EACTQ,SAAWC,GAAMR,EAAqBQ,EAAEC,OAAOH,iBAKrDrF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,yCACLF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBC,EAAAA,EAAAA,MAAA,UACEF,UAAU,mIACVsE,MAAOY,EACPM,SAAWC,GACTN,EAAoCM,EAAEC,OAAOpB,OAC9CrE,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQuE,MAAM,GAAErE,SAAC,uBACjBF,EAAAA,EAAAA,KAAA,UAAQuE,MAAM,YAAWrE,SAAC,eAC1BF,EAAAA,EAAAA,KAAA,UAAQuE,MAAM,eAAcrE,SAAC,kBAC7BF,EAAAA,EAAAA,KAAA,UAAQuE,MAAM,gBAAerE,SAAC,mBAC9BF,EAAAA,EAAAA,KAAA,UAAQuE,MAAM,WAAUrE,SAAC,sBAK/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,6CACLF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAAA,SACEC,UAAU,mIACV+D,KAAK,SACLO,MAAOc,EACPO,IAAK,EACLC,IAAK,IACLC,UAAQ,EACRL,SAAWC,IACTJ,EAAmCI,EAAEC,OAAOpB,MAAM,UAM1DvE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAA,UACEC,UAAU,+DACVI,QAvFaI,UACnBoE,GAAc,GACdE,GAAa,GACb,UACQpF,GACJoG,EAAAA,EAAAA,IAA+B,CAC7Bd,oBACAE,mCACAE,qCAGJN,GAAa,GACbiB,YAAW,KACTjB,GAAa,EAAM,GAClB,IACL,CAAC,QACCF,GAAc,EAChB,GAuEMpB,SAAUmB,EAAW1E,SAEpB0E,EAAa,cAAgB,eAG9B,ECsEV,EAjM4BqB,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAChC,MAAM1G,GAAWC,EAAAA,EAAAA,MACX0G,GAAcxD,EAAAA,EAAAA,KAAaC,IAAK,IAAAC,EAAA,OAAgB,QAAhBA,EAAKD,EAAME,aAAK,IAAAD,OAAA,EAAXA,EAAasD,WAAW,IAC7DC,GAAazD,EAAAA,EAAAA,KAAaC,IAAK,IAAAyD,EAAA,OAAgB,QAAhBA,EAAKzD,EAAME,aAAK,IAAAuD,OAAA,EAAXA,EAAaD,UAAU,IAC3DE,GAAY3D,EAAAA,EAAAA,KAAaC,IAAK,IAAA2D,EAAA,OAAgB,QAAhBA,EAAK3D,EAAME,aAAK,IAAAyD,OAAA,EAAXA,EAAaD,SAAS,KAE/DrF,EAAAA,EAAAA,YAAU,KACRzB,GAASgH,EAAAA,EAAAA,OACThH,GAASiH,EAAAA,EAAAA,MAAsB,GAC9B,CAACjH,IAEJ,MAAOkH,EAAmBC,IAAwB/G,EAAAA,EAAAA,UAAS,OACpDgH,EAAuBC,IAA4BjH,EAAAA,EAAAA,UAAS,OAC5DkH,EAAmBC,IAAwBnH,EAAAA,EAAAA,UAAS,OACpDoH,EAAcC,IAAmBrH,EAAAA,EAAAA,UAAS,KAC1C6E,EAAYC,IAAiB9E,EAAAA,EAAAA,WAAS,IACtCsH,EAAqBC,IAA0BvH,EAAAA,EAAAA,WAAS,IAS/DqB,EAAAA,EAAAA,YAAU,KACR4F,EAAyBP,EAAU,GAClC,CAACA,IAyBJ,OAAKH,GAAgBC,GAKnBpG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAEhEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iEAAgEC,SAAA,EAC7EF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CC,SAAC,iBAG7DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,SAC3CoG,EAAY3C,KAAK8C,IAChBtG,EAAAA,EAAAA,MAAA,OAEEF,UAAS,qEAAAG,QACU,OAAjByG,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrC,OAAQiC,EAAUjC,IAAM,cAAgB,IAE7DnE,QAASA,IApDSI,WAC5BqG,EAAqBL,GACrBa,GAAuB,SACjB3H,GAAS4H,EAAAA,EAAAA,IAAmBd,EAAUjC,MAC5C8C,GAAuB,EAAM,EAgDJE,CAAsBf,GAAWvG,SAAA,EAEhDF,EAAAA,EAAAA,KAAA,OACEyH,IAAKhB,EAAUiB,OACfC,IAAKlB,EAAUmB,KACf3H,UAAU,yCAEZD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qCAAoCC,SACjDuG,EAAUmB,SAZRnB,EAAUjC,aAoBvBxE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8DAA6DC,SACzEmH,GACCrH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAEhB8G,GACF5G,EAAAA,EAAAA,MAAAuD,EAAAA,SAAA,CAAAxD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAC9D6G,EAAsBa,OAGxBhD,IACC5E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,SAAC,iBAIhEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,UAASC,SAAA,CAAC,qBACL6G,EAAsBc,mBAE3C1H,EAAAA,EAAAA,MAAA,QAAMF,UAAU,UAASC,SAAA,CAAC,kBACR6G,EAAsBe,gBAGxC3H,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAE9CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,eACa,KAAb,QAAhCgG,EAAAa,EAAsBR,kBAAU,IAAAL,OAAA,EAAhCA,EAAkC9C,UACjCpD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAERF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SACK,QADLiG,EAC3BY,EAAsBR,kBAAU,IAAAJ,OAAA,EAAhCA,EAAkCxC,KAAKoE,IACtC5H,EAAAA,EAAAA,MAAA,OAEEF,UAAS,kGAAAG,QACU,OAAjB6G,QAAiB,IAAjBA,GAAAA,EAAmBzC,IAAQuD,EAAUvD,IAAM,KAE7CnE,QAASA,IA9FE0H,KAC7Bb,EAAqBa,EAAU,EA6FEC,CAAsBD,GAAW7H,SAAA,EAEhDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAE6H,EAAUH,QACzC5H,EAAAA,EAAAA,KAAA,UACEyD,SAAUmB,EACV3E,UAAS,sEAAAG,OACPwE,EAAa,gCAAkC,IAEjDvE,QAASA,IAlGDI,WAC5BoE,GAAc,SACRlF,GACJsI,EAAAA,EAAAA,IAAsBlB,EAAsBvC,IAAKuD,EAAUvD,YAEvD7E,GAAS4H,EAAAA,EAAAA,IAAmBR,EAAsBvC,YAClD7E,GAASuI,EAAAA,EAAAA,IAAmBnB,EAAsBvC,IAAK2C,UACvDxH,GAASiH,EAAAA,EAAAA,OACf/B,GAAc,EAAM,EA0FesD,CAAsBJ,GAAW7H,SACjD,aAbI6H,EAAUvD,aAsBvBrE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,mBACjCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,MAAA,UACEF,UAAU,gIACVsE,MAAO4C,EACP1B,SAAWC,GAAM0B,EAAgB1B,EAAEC,OAAOpB,OAAOrE,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,UAAQuE,MAAM,GAAErE,SAAC,uBACN,OAAVqG,QAAU,IAAVA,OAAU,EAAVA,EAAY5C,KAAKoE,IAChB/H,EAAAA,EAAAA,KAAA,UAA4BuE,MAAOwD,EAAUvD,IAAItE,SAC9C6H,EAAUH,MADAG,EAAUvD,WAK3BxE,EAAAA,EAAAA,KAAA,UACEyD,UACG0D,GACDvC,IACgC,QADtBwB,EACVW,EAAsBR,kBAAU,IAAAH,OAAA,EAAhCA,EAAkCgC,MAC/BL,GAAcA,EAAUvD,MAAQ2C,KAGrClH,UAAS,wDAAAG,QACN+G,GACDvC,GACgC,QADtByB,EACVU,EAAsBR,kBAAU,IAAAF,GAAhCA,EAAkC+B,MAC/BL,GAAcA,EAAUvD,MAAQ2C,IAE/B,gCACA,IAEN9G,QAlISI,UACzBoE,GAAc,SACRlF,GAASuI,EAAAA,EAAAA,IAAmBnB,EAAsBvC,IAAK2C,UACvDxH,GAAS4H,EAAAA,EAAAA,IAAmBR,EAAsBvC,YAClD7E,GAASiH,EAAAA,EAAAA,OACfQ,EAAgB,IAChBvC,GAAc,EAAM,EA4HwB3E,SAC7B,qBAQTF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4BAA2BC,SAAC,+CAlI7CF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,cAwIN,EClKV,EA7BmBmI,KACjB,MAAM1I,GAAWC,EAAAA,EAAAA,MACXH,GAAWC,EAAAA,EAAAA,OACVH,EAAW+I,IAAgBvI,EAAAA,EAAAA,UAAS,QACrCwI,GAAkBzF,EAAAA,EAAAA,KAAaC,IAAK,IAAAC,EAAA,OAAgB,QAAhBA,EAAKD,EAAME,aAAK,IAAAD,OAAA,EAAXA,EAAauF,eAAe,IAc3E,OARAnH,EAAAA,EAAAA,YAAU,KACgB,iBAApBmH,GACF5I,GAASe,EAAAA,EAAAA,OAAgBC,MAAK,KAC5BlB,EAAS,gBAAgB,GAE7B,GACC,CAAC8I,EAAiB5I,EAAUF,KAG7BU,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oEAAmEC,SAAA,EAChFF,EAAAA,EAAAA,KAACwI,EAAG,CAACjJ,UAAWA,EAAWC,eAdPiJ,IACtBH,EAAaG,EAAI,IAeA,SAAdlJ,IAAwBS,EAAAA,EAAAA,KAACwC,EAAI,IACf,aAAdjD,IAA4BS,EAAAA,EAAAA,KAACyE,EAAQ,IACvB,yBAAdlF,IAAwCS,EAAAA,EAAAA,KAACiG,EAAmB,MACzD,C,yJC9BH,MAAMyC,EAAgBC,GAAelI,UAC1C,IACE,MAAM,MAAE6C,EAAK,KAAEsF,QCHGnI,WACpB,IAEE,MAAO,CAAE6C,MAAO,KAAMsF,YADJC,EAAAA,GAAUC,KAAK,UAAWH,IACZC,KAClC,CAAE,MAAOtF,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDHgC0F,CAAWL,GACzC,GAAIrF,EACF,MAAM,IAAI2F,MAAM3F,GAElB4F,aAAaC,QAAQ,QAASC,KAAKC,UAAUT,IAC7CjJ,EAAS,CACPqE,KAAMsF,EAAAA,IAEV,CAAE,MAAOhG,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGWvD,EAAeA,IAAMD,UAChC,IACEyI,aAAaM,WAAW,SACxB7J,EAAS,CACPqE,KAAMsF,EAAAA,IAEV,CAAE,MAAOhG,GAAQ,GAGNH,EAAgBA,IAAM1C,UACjC,IACE,MAAM,MAAE6C,EAAK,KAAEsF,QCJInI,WACrB,IAEE,MAAO,CAAE6C,MAAO,KAAMsF,YADJC,EAAAA,GAAUY,IAAI,UACAb,KAClC,CAAE,MAAOtF,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDFgC0F,GAC9B,GAAI1F,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASX,GAEb,CAAE,MAAOtF,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGWT,EAAmBA,IAAM/C,UACpC,IACE,MAAM,MAAE6C,QCbc7C,WACxB,UACQoI,EAAAA,GAAUa,OAAO,QACzB,CAAE,MAAOpG,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDQ0B0F,GACxB,GAAI1F,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,IAEV,CAAE,MAAOhG,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGWsB,EAA8BA,IAAM9E,UAC/C,IACE,MAAM,MAAE6C,EAAK,KAAEsF,QCxDkBnI,WACnC,IAEE,MAAO,CAAE6C,MAAO,KAAMsF,YADJC,EAAAA,GAAUY,IAAI,iBACAb,KAClC,CAAE,MAAOtF,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDkDgC0F,GAC9B,GAAI1F,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASX,GAEb,CAAE,MAAOtF,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGW8B,EACV4D,GAAgBlJ,UACf,IACE,MAAM,MAAE6C,QClE0B7C,WACtC,UACQoI,EAAAA,GAAUe,IAAI,eAAgBD,EACtC,CAAE,MAAOrG,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GD6D4B0F,CAA6BW,GACrD,GAAIrG,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,IAEV,CAAE,MAAOhG,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGS0C,EAAuBA,IAAMlG,UACxC,IACE,MAAM,MAAE6C,EAAK,KAAEsF,QC1DWnI,WAC5B,IAEE,MAAO,CAAE6C,MAAO,KAAMsF,YADJC,EAAAA,GAAUY,IAAI,iBACAb,KAClC,CAAE,MAAOtF,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDoDgC0F,GAC9B,GAAI1F,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASX,GAEb,CAAE,MAAOtF,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGWsD,EAAsBsC,GAAgBpJ,UACjD,IACE,MAAM,MAAE6C,EAAK,KAAEsF,QCnESnI,WAC1B,IAEE,MAAO,CAAE6C,MAAO,KAAMsF,YADJC,EAAAA,GAAUY,IAAI,cAADrJ,OAAeyJ,KACdjB,KAClC,CAAE,MAAOtF,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GD6DgC0F,CAAiBa,GAC/C,GAAIvG,EACF,MAAM,IAAI2F,MAAM3F,GAGlB3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASX,GAEb,CAAE,MAAOtF,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGW2C,EAAsBA,IAAMnG,UACvC,IACE,MAAM,MAAE6C,EAAK,KAAEsF,QC7EUnI,WAC3B,IAEE,MAAO,CAAE6C,MAAO,KAAMsF,YADJC,EAAAA,GAAUY,IAAI,gBACAb,KAClC,CAAE,MAAOtF,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDuEgC0F,GAC9B,GAAI1F,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASX,GAEb,CAAE,MAAOtF,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGWiE,EACXA,CAAC2B,EAAaC,IAAgBrJ,UAC5B,IACE,MAAM,MAAE6C,QCvFc7C,OAAOoJ,EAAaC,KAC9C,UACQjB,EAAAA,GAAUkB,MAAM,kBAAmB,KAAM,CAC7CC,OAAQ,CAAEH,cAAaC,gBAE3B,CAAE,MAAOxG,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDgF4B0F,CAAiBa,EAAaC,GACtD,GAAIxG,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,IAEV,CAAE,MAAOhG,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,GAGSgE,EACXA,CAAC4B,EAAaC,IAAgBrJ,UAC5B,IACE,MAAM,MAAE6C,QC/FiB7C,OAAOoJ,EAAaC,KACjD,UACQjB,EAAAA,GAAUkB,MAAM,qBAAsB,KAAM,CAChDC,OAAQ,CAAEH,cAAaC,gBAE3B,CAAE,MAAOxG,GACP,OAAOyF,EAAAA,EAAAA,IAAezF,EACxB,GDwF4B0F,CAAoBa,EAAaC,GACzD,GAAIxG,EACF,MAAM,IAAI2F,MAAM3F,GAElB3D,EAAS,CACPqE,KAAMsF,EAAAA,IAEV,CAAE,MAAOhG,GACP3D,EAAS,CACPqE,KAAMsF,EAAAA,GACNC,QAASjG,EAAMW,SAEnB,E","sources":["components/admin/Tab.jsx","components/shared/CurrentTime.jsx","components/admin/Logs.jsx","components/admin/Settings.jsx","components/admin/CommunityManagement.jsx","pages/AdminPanel.jsx","redux/actions/adminActions.js","redux/api/adminAPI.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"../../redux/actions/adminActions\";\r\nimport ButtonLoadingSpinner from \"../loader/ButtonLoadingSpinner\";\r\nimport { BiLogOut } from \"react-icons/bi\";\r\nimport { BsPeople, BsWindowStack } from \"react-icons/bs\";\r\nimport { IoSettingsOutline } from \"react-icons/io5\";\r\n\r\nconst Tab = ({ activeTab, handleTabClick }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n\r\n  const handleLogout = async () => {\r\n    setLoggingOut(true);\r\n    await dispatch(logoutAction()).then(() => {\r\n      navigate(\"/admin/signin\");\r\n    });\r\n    setLoggingOut(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-b border-gray-200 sticky top-0 left-0 z-30 bg-white rounded-md\">\r\n      <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500\">\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-lg ${\r\n              activeTab === \"logs\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-gray-600 hover:border-gray-300\"\r\n            }`}\r\n            onClick={() => handleTabClick(\"logs\")}\r\n          >\r\n            <BsWindowStack className=\"mr-1\" />\r\n            Logs\r\n          </span>\r\n        </li>\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-lg ${\r\n              activeTab === \"settings\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-gray-600 hover:border-gray-300\"\r\n            }`}\r\n            onClick={() => handleTabClick(\"settings\")}\r\n          >\r\n            <IoSettingsOutline className=\"mr-1\" />\r\n            Settings\r\n          </span>\r\n        </li>\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-lg ${\r\n              activeTab === \"Community Management\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-gray-600 hover:border-gray-300\"\r\n            }`}\r\n            onClick={() => handleTabClick(\"Community Management\")}\r\n          >\r\n            <BsPeople className=\"mr-1\" />\r\n            Community Management\r\n          </span>\r\n        </li>\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-md ${\r\n              activeTab === \"logout\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-red-600 hover:border-red-600\"\r\n            }`}\r\n            onClick={handleLogout}\r\n          >\r\n            <BiLogOut className=\"mr-1\" />\r\n            <span\r\n              className={`${\r\n                activeTab === \"logout\"\r\n                  ? \"group-hover:text-gray-500\"\r\n                  : \"group-hover:text-red-600\"\r\n              }`}\r\n            >\r\n              {loggingOut ? (\r\n                <ButtonLoadingSpinner loadingText={\"Logging out...\"} />\r\n              ) : (\r\n                \"Logout\"\r\n              )}\r\n            </span>\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst CurrentTime = () => {\r\n  const [time, setTime] = useState(new Date().toLocaleString());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime(new Date().toLocaleString());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const date = new Date(time);\r\n  const weekday = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\r\n  const month = date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const day = date.toLocaleDateString(\"en-US\", { day: \"numeric\" });\r\n  const year = date.toLocaleDateString(\"en-US\", { year: \"numeric\" });\r\n  const hours = date.getHours() % 12 || 12;\r\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n  const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n  const amPm = date.getHours() >= 12 ? \"PM\" : \"AM\";\r\n  const timeString = `${hours}:${minutes}:${seconds} ${amPm}`;\r\n\r\n  return (\r\n    <div className=\"text-sm text-gray-800 mt-1\">\r\n      {`${weekday}, ${month} ${day}, ${year} ${timeString}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentTime;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getLogsAction,\r\n  deleteLogsAction,\r\n} from \"../../redux/actions/adminActions\";\r\nimport CurrentTime from \"../shared/CurrentTime\";\r\nimport ButtonLoadingSpinner from \"../loader/ButtonLoadingSpinner\";\r\nimport CommonLoading from \"../loader/CommonLoading\";\r\nimport { FcRefresh } from \"react-icons/fc\";\r\n\r\nconst Logs = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [clearing, setClearing] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const logs = useSelector((state) => state.admin?.logs);\r\n\r\n  const fetchLogs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await dispatch(getLogsAction());\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCleanup = async () => {\r\n    try {\r\n      setClearing(true);\r\n      await dispatch(deleteLogsAction());\r\n    } finally {\r\n      setClearing(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await fetchLogs();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [logs?.length]);\r\n\r\n  if (loading || !logs) {\r\n    return (\r\n      <div className=\"flex items-center justify-center mt-5\">\r\n        <CommonLoading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white flex flex-col items-center justify-center mt-3 rounded-md\">\r\n      <div className=\"p-4 shadow-md rounded relative xl:min-w-[1200px] lg:min-w-[1000px] md:min-w-[800px]\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">\r\n            User Activity Logs\r\n          </h1>\r\n          <CurrentTime />\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center mb-4 border-b border-gray-200 pb-2\">\r\n          <div className=\"text-sm italic text-gray-600\">{`Showing ${logs.length} items from the last 7 days`}</div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button onClick={handleRefresh}>\r\n              <FcRefresh />\r\n            </button>\r\n            <button\r\n              className={`bg-blue-500 text-white text-sm py-2 px-4 rounded hover:bg-blue-700 ${\r\n                clearing ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n              } ${logs.length === 0 ? \"hidden\" : \"\"}`}\r\n              onClick={handleCleanup}\r\n              disabled={clearing || logs.length === 0}\r\n            >\r\n              {clearing ? (\r\n                <ButtonLoadingSpinner loadingText=\"Clearing...\" />\r\n              ) : (\r\n                \"Clear Logs\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {!loading ? (\r\n          logs.length === 0 ? (\r\n            <div className=\"text-gray-500 text-lg\">No logs found</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"h-[430px] relative overflow-auto\">\r\n                <div className=\"w-full rounded\">\r\n                  <div className=\"grid grid-cols-5 gap-5 items-center border-b py-2 font-semibold text-gray-800\">\r\n                    <p className=\"text-center\">Timestamp</p>\r\n                    <p>Message</p>\r\n                    <p>Email Used</p>\r\n                    <p>Level</p>\r\n                    <p>Context Data</p>\r\n                  </div>\r\n                  {logs.map((log) => (\r\n                    <div\r\n                      key={log._id}\r\n                      className=\"grid grid-cols-5 gap-5 items-center border-b py-2 text-sm text-gray-700\"\r\n                    >\r\n                      <span className=\"flex-col justify-center items-center text-center font-mono\">\r\n                        <p>{log.relativeTimestamp}</p>\r\n                        <p className=\"text-xs\">{log.formattedTimestamp}</p>\r\n                      </span>\r\n                      <td\r\n                        className={`${\r\n                          log.level === \"info\"\r\n                            ? \"text-blue-500\"\r\n                            : log.level === \"warn\"\r\n                            ? \"text-orange-500\"\r\n                            : log.level === \"error\"\r\n                            ? \"text-red-600\"\r\n                            : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"capitalize\">{log.type}: </span>\r\n                        <span>{log.message}</span>\r\n                      </td>\r\n                      <p>{log.email}</p>\r\n                      <td className=\"\">\r\n                        <span\r\n                          className={`rounded-full px-2 py-1 text-sm font-semibold ${\r\n                            log.level === \"error\"\r\n                              ? \"bg-red-500 text-white\"\r\n                              : log.level === \"warn\"\r\n                              ? \"bg-orange-500 text-white\"\r\n                              : \"bg-blue-500 text-white\"\r\n                          }`}\r\n                        >\r\n                          {log.level}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"\">\r\n                        <ul className=\"list-disc list-inside\">\r\n                          {log.contextData &&\r\n                            Object.entries(log.contextData).map(\r\n                              ([key, value]) => (\r\n                                <li key={key}>\r\n                                  <span className=\"font-medium text-blue-500\">\r\n                                    {key}:{\" \"}\r\n                                  </span>\r\n                                  {value}\r\n                                </li>\r\n                              )\r\n                            )}\r\n                        </ul>\r\n                      </td>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-center text-sm italic text-gray-600 mt-2\">\r\n                logs are automatically deleted after 7 days\r\n              </div>\r\n            </>\r\n          )\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logs;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getServicePreferencesAction,\r\n  updateServicePreferencesAction,\r\n} from \"../../redux/actions/adminActions\";\r\n\r\nconst Settings = () => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const servicePreferences = useSelector(\r\n    (state) => state.admin?.servicePreferences\r\n  );\r\n  const [usePerspectiveAPI, setUsePerspectiveAPI] = useState(false);\r\n  const [\r\n    categoryFilteringServiceProvider,\r\n    setCategoryFilteringServiceProvider,\r\n  ] = useState(\"\");\r\n  const [categoryFilteringRequestTimeout, setCategoryFilteringRequestTimeout] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getServicePreferencesAction());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (servicePreferences) {\r\n      setUsePerspectiveAPI(servicePreferences.usePerspectiveAPI);\r\n      setCategoryFilteringServiceProvider(\r\n        servicePreferences.categoryFilteringServiceProvider\r\n      );\r\n      setCategoryFilteringRequestTimeout(\r\n        servicePreferences.categoryFilteringRequestTimeout\r\n      );\r\n      setIsLoading(false);\r\n    }\r\n  }, [servicePreferences]);\r\n\r\n  const handleUpdate = async () => {\r\n    setIsUpdating(true);\r\n    setIsSuccess(false);\r\n    try {\r\n      await dispatch(\r\n        updateServicePreferencesAction({\r\n          usePerspectiveAPI,\r\n          categoryFilteringServiceProvider,\r\n          categoryFilteringRequestTimeout,\r\n        })\r\n      );\r\n      setIsSuccess(true);\r\n      setTimeout(() => {\r\n        setIsSuccess(false);\r\n      }, 3000);\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading || !servicePreferences) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-5 w-full border rounded-md bg-white mt-3\">\r\n      <h2 className=\"font-semibold mb-4 border-b pb-2 text-center text-gray-700\">\r\n        Service Preferences\r\n      </h2>\r\n\r\n      {isSuccess && (\r\n        <div className=\"bg-green-100 text-green-800 p-2 mb-4 rounded\">\r\n          Service Preferences updated successfully!\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex items-center mb-4\">\r\n        <div>Use Perspective API for content moderation</div>\r\n        <div className=\"ml-auto\">\r\n          <input\r\n            className=\"w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n            type=\"checkbox\"\r\n            checked={usePerspectiveAPI}\r\n            onChange={(e) => setUsePerspectiveAPI(e.target.checked)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center mb-4\">\r\n        <div>Category filtering service provider</div>\r\n        <div className=\"ml-auto\">\r\n          <select\r\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n            value={categoryFilteringServiceProvider}\r\n            onChange={(e) =>\r\n              setCategoryFilteringServiceProvider(e.target.value)\r\n            }\r\n          >\r\n            <option value=\"\">Select a provider</option>\r\n            <option value=\"TextRazor\">TextRazor</option>\r\n            <option value=\"InterfaceAPI\">InterfaceAPI</option>\r\n            <option value=\"ClassifierAPI\">ClassifierAPI</option>\r\n            <option value=\"disabled\">Disabled</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center mb-4\">\r\n        <div>Category filtering request timeout (ms)</div>\r\n        <div className=\"ml-auto\">\r\n          <input\r\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n            type=\"number\"\r\n            value={categoryFilteringRequestTimeout}\r\n            min={0}\r\n            max={500000}\r\n            required\r\n            onChange={(e) => {\r\n              setCategoryFilteringRequestTimeout(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50\"\r\n          onClick={handleUpdate}\r\n          disabled={isUpdating}\r\n        >\r\n          {isUpdating ? \"Updating...\" : \"Update\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getCommunitiesAction,\r\n  getModeratorsAction,\r\n  addModeratorAction,\r\n  removeModeratorAction,\r\n  getCommunityAction,\r\n} from \"../../redux/actions/adminActions\";\r\n\r\nconst CommunityManagement = () => {\r\n  const dispatch = useDispatch();\r\n  const communities = useSelector((state) => state.admin?.communities);\r\n  const moderators = useSelector((state) => state.admin?.moderators);\r\n  const community = useSelector((state) => state.admin?.community);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCommunitiesAction());\r\n    dispatch(getModeratorsAction());\r\n  }, [dispatch]);\r\n\r\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\r\n  const [selectedCommunityData, setSelectedCommunityData] = useState(null);\r\n  const [selectedModerator, setSelectedModerator] = useState(null);\r\n  const [newModerator, setNewModerator] = useState(\"\");\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [isChangingCommunity, setIsChangingCommunity] = useState(false);\r\n\r\n  const handleCommunitySelect = async (community) => {\r\n    setSelectedCommunity(community);\r\n    setIsChangingCommunity(true);\r\n    await dispatch(getCommunityAction(community._id));\r\n    setIsChangingCommunity(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedCommunityData(community);\r\n  }, [community]);\r\n\r\n  const handleModeratorSelect = (moderator) => {\r\n    setSelectedModerator(moderator);\r\n  };\r\n\r\n  const handleRemoveModerator = async (moderator) => {\r\n    setIsUpdating(true);\r\n    await dispatch(\r\n      removeModeratorAction(selectedCommunityData._id, moderator._id)\r\n    );\r\n    await dispatch(getCommunityAction(selectedCommunityData._id));\r\n    await dispatch(addModeratorAction(selectedCommunityData._id, newModerator));\r\n    await dispatch(getModeratorsAction());\r\n    setIsUpdating(false);\r\n  };\r\n  const handleAddModerator = async () => {\r\n    setIsUpdating(true);\r\n    await dispatch(addModeratorAction(selectedCommunityData._id, newModerator));\r\n    await dispatch(getCommunityAction(selectedCommunityData._id));\r\n    await dispatch(getModeratorsAction());\r\n    setNewModerator(\"\");\r\n    setIsUpdating(false);\r\n  };\r\n\r\n  if (!communities || !moderators) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex gap-2 h-[85vh] w-full mt-3 border rounded-md\">\r\n      {/* Left column */}\r\n      <div className=\"flex flex-col w-full bg-white shadow-inner rounded-md border-r\">\r\n        <h1 className=\"text-lg font-bold p-4 text-center border-b-2\">\r\n          Communities\r\n        </h1>\r\n        <div className=\"flex flex-col overflow-y-auto\">\r\n          {communities.map((community) => (\r\n            <div\r\n              key={community._id}\r\n              className={`p-4 cursor-pointer hover:bg-background border-b flex items-center ${\r\n                selectedCommunity?._id === community._id ? \"bg-gray-200\" : \"\"\r\n              }`}\r\n              onClick={() => handleCommunitySelect(community)}\r\n            >\r\n              <img\r\n                src={community.banner}\r\n                alt={community.name}\r\n                className=\"w-10 h-10 rounded-full mr-2 md:mr-4\"\r\n              />\r\n              <span className=\"text-gray-700 text-xs md:text-base\">\r\n                {community.name}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right column */}\r\n      <div className=\"flex flex-col w-full bg-white rounded-md px-5 py-5 border-l\">\r\n        {isChangingCommunity ? (\r\n          <div className=\"flex justify-center items-center h-screen\">\r\n            <span className=\"admin-loader\"></span>\r\n          </div>\r\n        ) : selectedCommunityData ? (\r\n          <>\r\n            <h1 className=\"font-bold text-lg border-b border-black pb-1 mb-2\">\r\n              {selectedCommunityData.name}\r\n            </h1>\r\n\r\n            {isUpdating && (\r\n              <div className=\"bg-green-100 text-green-800 p-2 mb-4 rounded\">\r\n                Updating...\r\n              </div>\r\n            )}\r\n            <span className=\"text-sm\">\r\n              Total Moderators: {selectedCommunityData.moderatorCount}\r\n            </span>\r\n            <span className=\"text-sm\">\r\n              Total Members: {selectedCommunityData.memberCount}\r\n            </span>\r\n\r\n            <div className=\"flex flex-col md:flex-row gap-5\">\r\n              {/* Moderators list */}\r\n              <div className=\"flex flex-col gap-2 w-full md:w-1/2\">\r\n                <h2 className=\"font-medium mb-2\">Moderators</h2>\r\n                {selectedCommunityData.moderators?.length === 0 && (\r\n                  <span>No moderators</span>\r\n                )}\r\n                <div className=\"flex flex-col\">\r\n                  {selectedCommunityData.moderators?.map((moderator) => (\r\n                    <div\r\n                      key={moderator._id}\r\n                      className={`p-2 cursor-pointer border flex flex-col md:flex-row gap-2 justify-between items-center rounded ${\r\n                        selectedModerator?._id === moderator._id ? \"\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleModeratorSelect(moderator)}\r\n                    >\r\n                      <span className=\"font-medium\">{moderator.name}</span>\r\n                      <button\r\n                        disabled={isUpdating}\r\n                        className={` bg-red-500 px-4 py-1 text-sm  text-white rounded hover:bg-red-700 ${\r\n                          isUpdating ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n                        }`}\r\n                        onClick={() => handleRemoveModerator(moderator)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Add moderator form */}\r\n              <div className=\"flex flex-col w-full gap-2 md:w-1/2\">\r\n                <h2 className=\"font-medium mb-2\">Add Moderator</h2>\r\n                <div className=\"flex flex-col gap-2 md:flex-row\">\r\n                  <select\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                    value={newModerator}\r\n                    onChange={(e) => setNewModerator(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select a moderator</option>\r\n                    {moderators?.map((moderator) => (\r\n                      <option key={moderator._id} value={moderator._id}>\r\n                        {moderator.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <button\r\n                    disabled={\r\n                      !newModerator ||\r\n                      isUpdating ||\r\n                      selectedCommunityData.moderators?.find(\r\n                        (moderator) => moderator._id === newModerator\r\n                      )\r\n                    }\r\n                    className={`p-2 bg-blue-500 text-white rounded hover:bg-blue-700 ${\r\n                      !newModerator ||\r\n                      isUpdating ||\r\n                      selectedCommunityData.moderators?.find(\r\n                        (moderator) => moderator._id === newModerator\r\n                      )\r\n                        ? \"opacity-50 cursor-not-allowed\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={handleAddModerator}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex flex-col items-center justify-center h-full\">\r\n            <span className=\"font-medium text-gray-400\">\r\n              Select a community to view details\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityManagement;\r\n","import { useState, useEffect } from \"react\";\r\nimport Tab from \"../components/admin/Tab\";\r\nimport Logs from \"../components/admin/Logs\";\r\nimport Settings from \"../components/admin/Settings\";\r\nimport CommunityManagement from \"../components/admin/CommunityManagement\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"../redux/actions/adminActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst AdminPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"logs\");\r\n  const adminPanelError = useSelector((state) => state.admin?.adminPanelError);\r\n\r\n  const handleTabClick = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (adminPanelError === \"Unauthorized\") {\r\n      dispatch(logoutAction()).then(() => {\r\n        navigate(\"/admin/signin\");\r\n      });\r\n    }\r\n  }, [adminPanelError, dispatch, navigate]);\r\n\r\n  return (\r\n    <div className=\"pt-5 max-w-6xl mx-auto flex flex-col justify-center items-center \">\r\n      <Tab activeTab={activeTab} handleTabClick={handleTabClick} />\r\n\r\n      {activeTab === \"logs\" && <Logs />}\r\n      {activeTab === \"settings\" && <Settings />}\r\n      {activeTab === \"Community Management\" && <CommunityManagement />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import * as api from \"../api/adminAPI\";\r\nimport * as types from \"../constants/adminConstants\";\r\n\r\nexport const signInAction = (credential) => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.signIn(credential);\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    localStorage.setItem(\"admin\", JSON.stringify(data));\r\n    dispatch({\r\n      type: types.SIGN_IN_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.SIGN_IN_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutAction = () => async (dispatch) => {\r\n  try {\r\n    localStorage.removeItem(\"admin\");\r\n    dispatch({\r\n      type: types.LOGOUT_SUCCESS,\r\n    });\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getLogsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getLogs();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_LOGS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_LOGS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteLogsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error } = await api.deleteLogs();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.DELETE_LOGS_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.DELETE_LOGS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getServicePreferencesAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getServicePreferences();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_SERVICE_PREFERENCES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_SERVICE_PREFERENCES_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateServicePreferencesAction =\r\n  (preferences) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.updateServicePreferences(preferences);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.UPDATE_SERVICE_PREFERENCES_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.UPDATE_SERVICE_PREFERENCES_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getCommunitiesAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getCommunities();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_COMMUNITIES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_COMMUNITIES_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCommunityAction = (communityId) => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getCommunity(communityId);\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n\r\n    dispatch({\r\n      type: types.GET_COMMUNITY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_COMMUNITY_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getModeratorsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getModerators();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_MODERATORS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_MODERATORS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addModeratorAction =\r\n  (communityId, moderatorId) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.addModerator(communityId, moderatorId);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.ADD_MODERATOR_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.ADD_MODERATOR_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const removeModeratorAction =\r\n  (communityId, moderatorId) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.removeModerator(communityId, moderatorId);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.REMOVE_MODERATOR_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.REMOVE_MODERATOR_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n","import { ADMIN_API, handleApiError } from \"./utils\";\r\n\r\nexport const signIn = async (credential) => {\r\n  try {\r\n    const res = await ADMIN_API.post(\"/signin\", credential);\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getServicePreferences = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/preferences\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const updateServicePreferences = async (preferences) => {\r\n  try {\r\n    await ADMIN_API.put(\"/preferences\", preferences);\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getLogs = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/logs\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const deleteLogs = async () => {\r\n  try {\r\n    await ADMIN_API.delete(\"/logs\");\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getCommunities = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/communities\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getCommunity = async (communityId) => {\r\n  try {\r\n    const res = await ADMIN_API.get(`/community/${communityId}`);\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getModerators = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/moderators\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const addModerator = async (communityId, moderatorId) => {\r\n  try {\r\n    await ADMIN_API.patch(\"/add-moderators\", null, {\r\n      params: { communityId, moderatorId },\r\n    });\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const removeModerator = async (communityId, moderatorId) => {\r\n  try {\r\n    await ADMIN_API.patch(\"/remove-moderators\", null, {\r\n      params: { communityId, moderatorId },\r\n    });\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n"],"names":["_ref","activeTab","handleTabClick","navigate","useNavigate","dispatch","useDispatch","loggingOut","setLoggingOut","useState","_jsx","className","children","_jsxs","concat","onClick","BsWindowStack","IoSettingsOutline","BsPeople","async","logoutAction","then","BiLogOut","ButtonLoadingSpinner","loadingText","CurrentTime","time","setTime","Date","toLocaleString","useEffect","interval","setInterval","clearInterval","date","weekday","toLocaleDateString","month","day","year","hours","getHours","minutes","getMinutes","toString","padStart","seconds","getSeconds","amPm","timeString","Logs","loading","setLoading","clearing","setClearing","logs","useSelector","state","_state$admin","admin","fetchLogs","getLogsAction","length","CommonLoading","error","FcRefresh","deleteLogsAction","disabled","_Fragment","map","log","relativeTimestamp","formattedTimestamp","level","type","message","email","contextData","Object","entries","key","value","_id","Settings","isLoading","setIsLoading","isUpdating","setIsUpdating","isSuccess","setIsSuccess","servicePreferences","usePerspectiveAPI","setUsePerspectiveAPI","categoryFilteringServiceProvider","setCategoryFilteringServiceProvider","categoryFilteringRequestTimeout","setCategoryFilteringRequestTimeout","getServicePreferencesAction","checked","onChange","e","target","min","max","required","updateServicePreferencesAction","setTimeout","CommunityManagement","_selectedCommunityDat","_selectedCommunityDat2","_selectedCommunityDat3","_selectedCommunityDat4","communities","moderators","_state$admin2","community","_state$admin3","getCommunitiesAction","getModeratorsAction","selectedCommunity","setSelectedCommunity","selectedCommunityData","setSelectedCommunityData","selectedModerator","setSelectedModerator","newModerator","setNewModerator","isChangingCommunity","setIsChangingCommunity","getCommunityAction","handleCommunitySelect","src","banner","alt","name","moderatorCount","memberCount","moderator","handleModeratorSelect","removeModeratorAction","addModeratorAction","handleRemoveModerator","find","AdminPanel","setActiveTab","adminPanelError","Tab","tab","signInAction","credential","data","ADMIN_API","post","handleApiError","api","Error","localStorage","setItem","JSON","stringify","types","payload","removeItem","get","delete","preferences","put","communityId","moderatorId","patch","params"],"sourceRoot":""}