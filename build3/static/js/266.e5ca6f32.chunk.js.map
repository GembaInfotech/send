{"version":3,"file":"static/js/266.e5ca6f32.chunk.js","mappings":"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","sources":["pages/AdminSignIn.jsx","redux/actions/adminActions.js","redux/api/adminAPI.js"],"sourcesContent":["import { useNavigate, Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport ButtonLoadingSpinner from \"../components/loader/ButtonLoadingSpinner\";\r\nimport { IoIosArrowRoundBack } from \"react-icons/io\";\r\nimport { signInAction } from \"../redux/actions/adminActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AdminSignIn = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signingIn, setSigningIn] = useState(false);\r\n\r\n  const signInError = useSelector((state) => state.admin?.signInError);\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    setSigningIn(true);\r\n    e.preventDefault();\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    dispatch(signInAction(data)).then(() => {\r\n      setSigningIn(false);\r\n      navigate(\"/admin\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen\">\r\n      <div className=\"w-full max-w-sm mx-auto overflow-hidden bg-white rounded-md shadow-md\">\r\n        <div className=\"px-6 py-4\">\r\n          <div className=\"flex justify-center mx-auto\">\r\n          \r\n          </div>\r\n\r\n          <p className=\"mt-1 text-center text-gray-500\">Sign in as admin</p>\r\n          <form>\r\n            <div className=\"w-full mt-4\">\r\n              <input\r\n                onChange={handleUsernameChange}\r\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-500 bg-white border rounded-md  focus:border-blue-400  focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-blue-300\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n              />\r\n            </div>\r\n            <div className=\"w-full mt-4\">\r\n              <input\r\n                onChange={handlePasswordChange}\r\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-500 bg-white border rounded-md  focus:border-blue-400 focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-blue-300\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                aria-label=\"Password\"\r\n              />\r\n            </div>\r\n            {signInError && (\r\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md relative mt-4 flex items-center justify-between\">\r\n                <span className=\"block sm:inline\">{signInError}</span>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center justify-between mt-4\">\r\n              <Link to=\"/\">\r\n                <IoIosArrowRoundBack className=\"inline-block w-4 h-4 mr-2\" />\r\n                Back to home\r\n              </Link>\r\n              <button\r\n                disabled={signingIn}\r\n                type=\"submit\"\r\n                onClick={(e) => handleSubmit(e)}\r\n                className=\"px-6 py-2 text-sm font-medium tracking-wide text-white capitalize transition-colors duration-300 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-50\"\r\n              >\r\n                {signingIn ? (\r\n                  <ButtonLoadingSpinner loadingText={\"Signing in...\"} />\r\n                ) : (\r\n                  \"Sign in\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSignIn;\r\n","import * as api from \"../api/adminAPI\";\r\nimport * as types from \"../constants/adminConstants\";\r\n\r\nexport const signInAction = (credential) => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.signIn(credential);\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    localStorage.setItem(\"admin\", JSON.stringify(data));\r\n    dispatch({\r\n      type: types.SIGN_IN_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.SIGN_IN_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutAction = () => async (dispatch) => {\r\n  try {\r\n    localStorage.removeItem(\"admin\");\r\n    dispatch({\r\n      type: types.LOGOUT_SUCCESS,\r\n    });\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getLogsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getLogs();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_LOGS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_LOGS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteLogsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error } = await api.deleteLogs();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.DELETE_LOGS_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.DELETE_LOGS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getServicePreferencesAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getServicePreferences();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_SERVICE_PREFERENCES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_SERVICE_PREFERENCES_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateServicePreferencesAction =\r\n  (preferences) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.updateServicePreferences(preferences);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.UPDATE_SERVICE_PREFERENCES_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.UPDATE_SERVICE_PREFERENCES_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getCommunitiesAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getCommunities();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_COMMUNITIES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_COMMUNITIES_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCommunityAction = (communityId) => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getCommunity(communityId);\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n\r\n    dispatch({\r\n      type: types.GET_COMMUNITY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_COMMUNITY_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getModeratorsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getModerators();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_MODERATORS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_MODERATORS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addModeratorAction =\r\n  (communityId, moderatorId) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.addModerator(communityId, moderatorId);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.ADD_MODERATOR_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.ADD_MODERATOR_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const removeModeratorAction =\r\n  (communityId, moderatorId) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.removeModerator(communityId, moderatorId);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.REMOVE_MODERATOR_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.REMOVE_MODERATOR_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n","import { ADMIN_API, handleApiError } from \"./utils\";\r\n\r\nexport const signIn = async (credential) => {\r\n  try {\r\n    const res = await ADMIN_API.post(\"/signin\", credential);\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getServicePreferences = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/preferences\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const updateServicePreferences = async (preferences) => {\r\n  try {\r\n    await ADMIN_API.put(\"/preferences\", preferences);\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getLogs = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/logs\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const deleteLogs = async () => {\r\n  try {\r\n    await ADMIN_API.delete(\"/logs\");\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getCommunities = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/communities\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getCommunity = async (communityId) => {\r\n  try {\r\n    const res = await ADMIN_API.get(`/community/${communityId}`);\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getModerators = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/moderators\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const addModerator = async (communityId, moderatorId) => {\r\n  try {\r\n    await ADMIN_API.patch(\"/add-moderators\", null, {\r\n      params: { communityId, moderatorId },\r\n    });\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const removeModerator = async (communityId, moderatorId) => {\r\n  try {\r\n    await ADMIN_API.patch(\"/remove-moderators\", null, {\r\n      params: { communityId, moderatorId },\r\n    });\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n"],"names":["AdminSignIn","dispatch","useDispatch","navigate","useNavigate","username","setUsername","useState","password","setPassword","signingIn","setSigningIn","signInError","useSelector","state","_state$admin","admin","_jsx","className","children","_jsxs","onChange","e","target","value","type","placeholder","Link","to","IoIosArrowRoundBack","disabled","onClick","preventDefault","data","signInAction","then","handleSubmit","ButtonLoadingSpinner","loadingText","credential","async","error","ADMIN_API","post","handleApiError","api","Error","localStorage","setItem","JSON","stringify","types","payload","message","logoutAction","removeItem","getLogsAction","get","deleteLogsAction","delete","getServicePreferencesAction","updateServicePreferencesAction","preferences","put","getCommunitiesAction","getCommunityAction","communityId","concat","getModeratorsAction","addModeratorAction","moderatorId","patch","params","removeModeratorAction"],"sourceRoot":""}